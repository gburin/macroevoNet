library("MCMCglmm")
library("ape")
library("caper")
library("mulTree")
library("reshape2")
library("stringr")
library("foreach")
library("doMC")

## Importing trees
allfiles.eric <- list.files("./data/bamm/eric/", pattern = "eric")
allfiles.hack <- list.files("./data/bamm/hack/", pattern = "hack")

eric.trees <- lapply(paste0("./data/bamm/eric/", allfiles.eric[!grepl("\\_", allfiles.eric)]), read.tree)
hack.trees <- lapply(paste0("./data/bamm/hack/", allfiles.hack[!grepl("\\_", allfiles.hack)]), read.tree)

fulltrees <- c(eric.trees[1:56], hack.trees[1:56])

## Network data was organized, processed and exported using a separate script

source("./R/data_preparation_mcmcglmm.R")

## Calculating z-scores for diversification rates

zscores.rates <-  apply(fulldata.net.bin[, 26:249], 2, function(x){unlist(aggregate(x, by = list(fulldata.net.bin$id), FUN = scale)[,2])})

fulldata.net.bin.z <- fulldata.net.bin
fulldata.net.bin.z[, 26:249] <- zscores.rates

## Generating trees for MCMCglmm

pglstrees <- lapply(fulltrees, function(x){drop.tip(x, tip = x$tip.label[is.na(match(x$tip.label, fulldata.net.bin$species))])})

## Calculating individual and mean phylogenetic signal

## mean(unlist(sapply(pglstrees, phylosig, x = setNames(fulldata.net.bin.z$pca, fulldata.net.bin.z$species), method = "lambda")[1,]))

## Creating mulTree object
class(pglstrees) <- "multiPhylo"

## mulTree_data_zscore <- as.mulTree(data = fulldata.net.bin.zscore, tree = pglstrees, taxa = "species")
mulTree_data_raw <- as.mulTree(data = fulldata.net.bin.z, tree = pglstrees, taxa = "species")

my_priors <- list(R = list(V = 1/2, nu = 0.002),
                  G = list(G1 = list(V = 1/2, nu = 0.002),
                           G2 = list(V = 1/2, nu = 0.002)))

my_formula_global <- "CENTR ~ (epsilon.TREE) + (netdiv.TREE) + (epsilon.TREE):(netdiv.TREE) + clim.pc1 + clim.pc2 + (epsilon.TREE):clim.pc1 + (epsilon.TREE):clim.pc2 + (netdiv.TREE):clim.pc1 + (netdiv.TREE):clim.pc2"

my_formula_dynamics <- "CENTR ~ (epsilon.TREE) + (netdiv.TREE) + (epsilon.TREE):(netdiv.TREE) + clim.pc1 + clim.pc2 + dynamics + (epsilon.TREE):clim.pc1 + (epsilon.TREE):clim.pc2 + (epsilon.TREE):dynamics + (netdiv.TREE):clim.pc1 + (netdiv.TREE):clim.pc2 + (netdiv.TREE):dynamics + (epsilon.TREE):clim.pc1:dynamics + (epsilon.TREE):clim.pc2:dynamics + (netdiv.TREE):clim.pc1:dynamics + (netdiv.TREE):clim.pc2:dynamics + (epsilon.TREE):(netdiv.TREE):dynamics + clim.pc1:dynamics + clim.pc2:dynamics"

my_formula_latitude <- "CENTR ~ (epsilon.TREE) + (netdiv.TREE) + (epsilon.TREE):(netdiv.TREE) + clim.pc1 + clim.pc2 + lat.clim + (epsilon.TREE):clim.pc1 + (epsilon.TREE):clim.pc2 + (epsilon.TREE):lat.clim + (netdiv.TREE):clim.pc1 + (netdiv.TREE):clim.pc2 + (netdiv.TREE):lat.clim + (epsilon.TREE):clim.pc1:lat.clim + (epsilon.TREE):clim.pc2:lat.clim + (netdiv.TREE):clim.pc1:lat.clim + (netdiv.TREE):clim.pc2:lat.clim + (epsilon.TREE):(netdiv.TREE):lat.clim + clim.pc1:lat.clim + clim.pc2:lat.clim"

registerDoMC(56)

## Building and running the models

### Global + PCA
fullmcmc.results.global.pca.z <- foreach(i = 1:112) %dopar% {
    MCMCglmm(fixed = formula(gsub("CENTR", "pca", gsub("TREE",
    gsub("epsilon.", "", names(mulTree_data_raw$data)[25 + i], fixed =
    TRUE), my_formula_global))), random = ~ animal + sp.col, family =
    "gaussian", ginverse = list(animal =
    inverseA(pglstrees[[i]])$Ainv), nitt = c(5000000), burnin =
    c(2500000), thin = c(2500), prior = my_priors, data =
    mulTree_data_raw$data) }

save(fullmcmc.results.global.pca.z, file = "./output/mcmcglmm_global_pca_zscore.RData")


## ### Global + Degree
## fullmcmc.results.global.degree.z <- foreach(i = 1:112) %dopar% {
##     MCMCglmm(fixed = formula(gsub("CENTR", "degree.z", gsub("TREE", gsub("epsilon.", "", names(mulTree_data_raw$data)[25 + i], fixed = TRUE), my_formula_global))),
##              random = ~ animal + sp.col,
##              family = "gaussian",
##              ginverse = list(animal = inverseA(pglstrees[[i]])$Ainv),
##              nitt = c(5000000),
##              burnin = c(2500000),
##              thin = c(2500),
##              prior = my_priors,
##              data = mulTree_data_raw$data)
## }

## save(fullmcmc.results.global.degree.z, file = "./output/mcmcglmm_global_degree_zscore.RData")


## ### Global + Closeness
## fullmcmc.results.global.closeness.z <- foreach(i = 1:112) %dopar% {
##     MCMCglmm(fixed = formula(gsub("CENTR", "closeness.z", gsub("TREE", gsub("epsilon.", "", names(mulTree_data_raw$data)[25 + i], fixed = TRUE), my_formula_global))),
##              random = ~ animal + sp.col,
##              family = "gaussian",
##              ginverse = list(animal = inverseA(pglstrees[[i]])$Ainv),
##              nitt = c(5000000),
##              burnin = c(2500000),
##              thin = c(2500),
##              prior = my_priors,
##              data = mulTree_data_raw$data)
## }

## save(fullmcmc.results.global.closeness.z, file = "./output/mcmcglmm_global_closeness_zscore.RData")


## ### Global + katz
## fullmcmc.results.global.katz.z <- foreach(i = 1:112) %dopar% {
##     MCMCglmm(fixed = formula(gsub("CENTR", "katz.z", gsub("TREE", gsub("epsilon.", "", names(mulTree_data_raw$data)[25 + i], fixed = TRUE), my_formula_global))),
##              random = ~ animal + sp.col,
##              family = "gaussian",
##              ginverse = list(animal = inverseA(pglstrees[[i]])$Ainv),
##              nitt = c(5000000),
##              burnin = c(2500000),
##              thin = c(2500),
##              prior = my_priors,
##              data = mulTree_data_raw$data)
## }

## save(fullmcmc.results.global.katz.z, file = "./output/mcmcglmm_global_katz_zscore.RData")
